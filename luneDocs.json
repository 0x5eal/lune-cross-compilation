{
  "@roblox/global/console": {
    "code_sample": "",
    "documentation": "Logging & formatting",
    "keys": {
      "console": "@roblox/global/console.console"
    },
    "learn_more_link": ""
  },
  "@roblox/global/console.error": {
    "code_sample": "",
    "documentation": "Prints arguments as a human-readable string with syntax highlighting for tables to stderr.\n\nThis will also prepend an [ERROR] tag at the beginning of the message.\n\nUsing this function will automatically set the exit code of the process\nto 1, unless it gets manually specified afterwards using `process.exit`.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/console.format": {
    "code_sample": "",
    "documentation": "Formats arguments into a human-readable string with syntax highlighting for tables.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/console.info": {
    "code_sample": "",
    "documentation": "Prints arguments as a human-readable string with syntax highlighting for tables to stdout.\n\nThis will also prepend an [INFO] tag at the beginning of the message.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/console.log": {
    "code_sample": "",
    "documentation": "Prints arguments as a human-readable string with syntax highlighting for tables to stdout.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/console.resetColor": {
    "code_sample": "",
    "documentation": "Resets the current persistent output color.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/console.resetStyle": {
    "code_sample": "",
    "documentation": "Resets the current persistent output style.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/console.setColor": {
    "code_sample": "",
    "documentation": "Sets the current persistent output color.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/console.setStyle": {
    "code_sample": "",
    "documentation": "Sets the current persistent output style.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/console.warn": {
    "code_sample": "",
    "documentation": "Prints arguments as a human-readable string with syntax highlighting for tables to stdout.\n\nThis will also prepend an [INFO] tag at the beginning of the message.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/fs": {
    "code_sample": "",
    "documentation": "Filesystem",
    "keys": {
      "fs": "@roblox/global/fs.fs"
    },
    "learn_more_link": ""
  },
  "@roblox/global/fs.isDir": {
    "code_sample": "",
    "documentation": "Checks if a given path is a directory.\n\nAn error will be thrown in the following situations:\n\n* The current process lacks permissions to read at `path`.\n* Some other I/O error occurred.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/fs.isFile": {
    "code_sample": "",
    "documentation": "Checks if a given path is a file.\n\nAn error will be thrown in the following situations:\n\n* The current process lacks permissions to read at `path`.\n* Some other I/O error occurred.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/fs.readDir": {
    "code_sample": "",
    "documentation": "Reads entries in a directory at `path`.\n\nAn error will be thrown in the following situations:\n\n* `path` does not point to an existing directory.\n* The current process lacks permissions to read the contents of the directory.\n* Some other I/O error occurred.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/fs.readFile": {
    "code_sample": "",
    "documentation": "Reads a file at `path`.\n\nAn error will be thrown in the following situations:\n\n* `path` does not point to an existing file.\n* The current process lacks permissions to read the file.\n* The contents of the file cannot be read as a UTF-8 string.\n* Some other I/O error occurred.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/fs.removeDir": {
    "code_sample": "",
    "documentation": "Removes a directory and all of its contents.\n\nAn error will be thrown in the following situations:\n\n* `path` is not an existing and empty directory.\n* The current process lacks permissions to remove the directory.\n* Some other I/O error occurred.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/fs.removeFile": {
    "code_sample": "",
    "documentation": "Removes a file.\n\nAn error will be thrown in the following situations:\n\n* `path` does not point to an existing file.\n* The current process lacks permissions to remove the file.\n* Some other I/O error occurred.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/fs.writeDir": {
    "code_sample": "",
    "documentation": "Creates a directory and its parent directories if they are missing.\n\nAn error will be thrown in the following situations:\n\n* `path` already points to an existing file or directory.\n* The current process lacks permissions to create the directory or its missing parents.\n* Some other I/O error occurred.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/fs.writeFile": {
    "code_sample": "",
    "documentation": "Writes to a file at `path`.\n\nAn error will be thrown in the following situations:\n\n* The file's parent directory does not exist.\n* The current process lacks permissions to write to the file.\n* Some other I/O error occurred.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/net": {
    "code_sample": "",
    "documentation": "Networking",
    "keys": {
      "net": "@roblox/global/net.net"
    },
    "learn_more_link": ""
  },
  "@roblox/global/net.jsonDecode": {
    "code_sample": "",
    "documentation": "Decodes the given JSON string into a lua value.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/net.jsonEncode": {
    "code_sample": "",
    "documentation": "Encodes the given value as JSON.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/net.request": {
    "code_sample": "",
    "documentation": "Sends an HTTP request using the given url and / or parameters, and returns a dictionary that describes the response received.\n\nOnly throws an error if a miscellaneous network or I/O error occurs, never for unsuccessful status codes.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/process": {
    "code_sample": "",
    "documentation": "Current process & child processes",
    "keys": {
      "process": "@roblox/global/process.process"
    },
    "learn_more_link": ""
  },
  "@roblox/global/process.args": {
    "code_sample": "",
    "documentation": "The arguments given when running the Lune script.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/process.env": {
    "code_sample": "",
    "documentation": "Current environment variables for this process.\n\nSetting a value on this table will set the corresponding environment variable.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/process.exit": {
    "code_sample": "",
    "documentation": "Exits the currently running script as soon as possible with the given exit code.\n\nExit code 0 is treated as a successful exit, any other value is treated as an error.\n\nSetting the exit code using this function will override any otherwise automatic exit code.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/process.spawn": {
    "code_sample": "",
    "documentation": "Spawns a child process that will run the program `program` with the given `params` as arguments, and returns a dictionary that describes the final status and ouput of the child process.",
    "learn_more_link": "",
    "params": [],
    "returns": []
  },
  "@roblox/global/task": {
    "code_sample": "",
    "documentation": "Task scheduler & thread spawning",
    "keys": {
      "task": "@roblox/global/task.task"
    },
    "learn_more_link": ""
  },
  "@roblox/global/task.cancel": {
    "code_sample": "",
    "documentation": "Stops a currently scheduled thread from resuming.",
    "learn_more_link": "",
    "params": [
      {
        "documentation": "@roblox/global/task.cancel/param/0",
        "name": "thread"
      }
    ],
    "returns": []
  },
  "@roblox/global/task.cancel/param/0": {
    "documentation": "The thread to cancel"
  },
  "@roblox/global/task.defer": {
    "code_sample": "",
    "documentation": "Defers a thread or function to run at the end of the current task queue.",
    "learn_more_link": "",
    "params": [
      {
        "documentation": "@roblox/global/task.defer/param/0",
        "name": "functionOrThread"
      }
    ],
    "returns": [
      "@roblox/global/task.defer/return/0"
    ]
  },
  "@roblox/global/task.defer/param/0": {
    "documentation": "The function or thread to defer"
  },
  "@roblox/global/task.defer/return/0": {
    "documentation": "The thread that will be deferred"
  },
  "@roblox/global/task.delay": {
    "code_sample": "",
    "documentation": "Delays a thread or function to run after `duration` seconds.",
    "learn_more_link": "",
    "params": [
      {
        "documentation": "@roblox/global/task.delay/param/0",
        "name": "functionOrThread"
      }
    ],
    "returns": [
      "@roblox/global/task.delay/return/0"
    ]
  },
  "@roblox/global/task.delay/param/0": {
    "documentation": "The function or thread to delay"
  },
  "@roblox/global/task.delay/return/0": {
    "documentation": "The thread that will be delayed"
  },
  "@roblox/global/task.spawn": {
    "code_sample": "",
    "documentation": "Instantly runs a thread or function.\n\nIf the spawned task yields, the thread that spawned the task\nwill resume, letting the spawned task run in the background.",
    "learn_more_link": "",
    "params": [
      {
        "documentation": "@roblox/global/task.spawn/param/0",
        "name": "functionOrThread"
      }
    ],
    "returns": [
      "@roblox/global/task.spawn/return/0"
    ]
  },
  "@roblox/global/task.spawn/param/0": {
    "documentation": "The function or thread to spawn"
  },
  "@roblox/global/task.spawn/return/0": {
    "documentation": "The thread that was spawned"
  },
  "@roblox/global/task.wait": {
    "code_sample": "",
    "documentation": "Waits for the given duration, with a minimum wait time of 10 milliseconds.",
    "learn_more_link": "",
    "params": [
      {
        "documentation": "@roblox/global/task.wait/param/0",
        "name": "duration"
      }
    ],
    "returns": [
      "@roblox/global/task.wait/return/0"
    ]
  },
  "@roblox/global/task.wait/param/0": {
    "documentation": "The amount of time to wait"
  },
  "@roblox/global/task.wait/return/0": {
    "documentation": "The exact amount of time waited"
  }
}